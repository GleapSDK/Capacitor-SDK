{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export type CallbackID = string;\n\nexport interface GleapEventMessage {\n  name: string,\n  data?: any,\n}\n\nexport type GleapEventCallback = (message: GleapEventMessage | null, err?: any) => void;\n\nexport interface GleapPlugin {\n  /**\n  * Initialize Gleap with an API key\n  *\n  * @since 7.0.0\n  */\n  initialize(options: {\n    API_KEY: string;\n  }): Promise<{\n    initialized: boolean;\n  }>;\n\n  /**\n  * Set user identity\n  *\n  * @since 7.0.0\n  */\n  identify(options: {\n    userId: string;\n    userHash?: string;\n    name?: string;\n    email?: string;\n    phone?: string;\n    companyId?: string;\n    companyName?: string;\n    avatar?: string;\n    sla?: number;\n    plan?: string;\n    value?: number;\n    customData?: Object;\n  }): Promise<{\n    identify: boolean;\n  }>;\n\n  /**\n  * Update user properties\n  *\n  * @since 13.2.1\n  */\n  updateContact(options: {\n    name?: string;\n    email?: string;\n    phone?: string;\n    companyId?: string;\n    companyName?: string;\n    avatar?: string;\n    sla?: number;\n    plan?: string;\n    value?: number;\n    customData?: Object;\n  }): Promise<{\n    identify: boolean;\n  }>;\n\n  /**\n  * Clear user identity\n  *\n  * @since 7.0.0\n  */\n  clearIdentity(): Promise<{\n    clearIdentity: boolean;\n  }>;\n\n  /**\n  * Get the current user identity\n  *\n  * @since 8.1.0\n  */\n  getIdentity(): Promise<{\n    identity: {\n      userId: string;\n      name?: string;\n      email?: string;\n      phone?: string;\n      value?: number;\n    };\n  }>;\n\n  /**\n  * User identified status.\n  *\n  * @since 8.1.0\n  */\n  isUserIdentified(): Promise<{\n    isUserIdentified: boolean;\n  }>;\n\n  /**\n  * Submit a custom log message with the given level\n  *\n  * @since 7.0.0\n  */\n  log(options: {\n    message: string;\n    logLevel?: \"ERROR\" | \"WARNING\" | \"INFO\";\n  }): Promise<{\n    logged: boolean;\n  }>;\n\n  /**\n  * Manually show a survey.\n  *\n  * @since 8.5.1\n  */\n  showSurvey(options: {\n    surveyId: string;\n    format?: \"survey\" | \"survey_full\";\n  }): Promise<{\n    opened: boolean;\n  }>;\n\n  /**\n  * Add custom data\n  *\n  * @since 7.0.0\n  */\n  attachCustomData(options: {\n    data: any;\n  }): Promise<{\n    attachedCustomData: boolean;\n  }>;\n\n  /**\n  * Set tags\n  *\n  * @since 8.6.0\n  */\n  setTags(options: {\n    tags: string[];\n  }): Promise<{\n    tagsSet: boolean;\n  }>;\n\n  /**\n  * Set network logs blacklist\n  *\n  * @since 13.2.1\n  */\n  setNetworkLogsBlacklist(options: {\n    blacklist: string[];\n  }): Promise<{\n    blacklistSet: boolean;\n  }>;\n\n  /**\n  * Set network logs props to ignore\n  *\n  * @since 13.2.1\n  */\n  setNetworkLogPropsToIgnore(options: {\n    propsToIgnore: string[];\n  }): Promise<{\n    propsToIgnoreSet: boolean;\n  }>;\n\n  /**\n  * Sets the AI tools to use\n  *\n  * @since 13.5.0\n  */\n  setAiTools(options: {\n    tools: {\n      name: string;\n      description: string;\n      response: string;\n      executionType: \"auto\" | \"button\";\n      parameters: {\n        name: string;\n        description: string;\n        type: \"string\" | \"number\" | \"boolean\";\n        required: boolean;\n        enums?: string[];\n      }[];\n    }[];\n  }): Promise<{\n    aiToolsSet: boolean;\n  }>;\n\n  /**\n  * Sets the value of a ticket attribute\n  *\n  * @since 13.5.0\n  */\n  setTicketAttribute(options: {\n    key: string;\n    value: string;\n  }): Promise<{\n    setTicketAttribute: boolean;\n  }>;\n\n  /**\n  * Unset a ticket attribute\n  *\n  * @since 14.1.0\n  */\n  unsetTicketAttribute(options: {\n    key: string;\n  }): Promise<{\n    unsetTicketAttribute: boolean;\n  }>;\n\n  /**\n  * Clear all ticket attributes\n  *\n  * @since 14.1.0\n  */\n  clearTicketAttributes(): Promise<{\n    clearTicketAttributes: boolean;\n  }>;\n\n  /**\n  * Set custom data\n  *\n  * @since 7.0.0\n  */\n  setCustomData(options: {\n    key: string;\n    value: string;\n  }): Promise<{\n    setCustomData: boolean;\n  }>;\n\n  /**\n  * Remove custom data by key\n  *\n  * @since 7.0.0\n  */\n  removeCustomData(options: {\n    key: string;\n  }): Promise<{\n    removedCustomData: boolean;\n  }>;\n\n  /**\n  * Clear custom data\n  *\n  * @since 7.0.0\n  */\n  clearCustomData(): Promise<{\n    clearedCustomData: boolean;\n  }>;\n\n  /**\n  * Log event to Gleap\n  *\n  * @since 8.0.0\n  */\n  trackEvent(options: {\n    name: string;\n    data?: any;\n  }): Promise<{\n    loggedEvent: boolean;\n  }>;\n\n  /**\n  * Track a page view\n  *\n  * @since 8.4.1\n  */\n  trackPage(options: {\n    pageName: string;\n  }): Promise<{\n    trackedPage: boolean;\n  }>;\n\n  /**\n   * \n   *\n   * @since 7.0.0\n   */\n  setEventCallback(\n    callback: GleapEventCallback,\n  ): Promise<CallbackID>;\n\n  /**\n * Log event to Gleap\n *\n * @since 7.0.0\n */\n  sendSilentCrashReport(options: {\n    description: string,\n    severity?: \"LOW\" | \"MEDIUM\" | \"HIGH\";\n    dataExclusion?: {\n      customData: Boolean;\n      metaData: Boolean;\n      attachments: Boolean;\n      consoleLog: Boolean;\n      networkLogs: Boolean;\n      customEventLog: Boolean;\n      screenshot: Boolean;\n      replays: Boolean;\n    };\n  }): Promise<{\n    sentSilentBugReport: boolean;\n  }>;\n\n  /**\n  * Prefills the widget's form data\n  *\n  * @since 7.0.0\n  */\n  preFillForm(options: {\n    data: any;\n  }): Promise<{\n    preFilledForm: boolean;\n  }>;\n\n  /**\n  * Add attachment as bas64 string\n  *\n  * @since 7.0.0\n  */\n  addAttachment(options: {\n    base64data: string;\n    name: string;\n  }): Promise<{\n    attachmentAdded: boolean;\n  }>;\n\n  /**\n  * All attachments removed\n  *\n  * @since 7.0.0\n  */\n  removeAllAttachments(): Promise<{\n    allAttachmentsRemoved: boolean;\n  }>;\n\n  /**\n  * Open widget\n  *\n  * @since 7.0.0\n  */\n  open(): Promise<{\n    openedWidget: boolean;\n  }>;\n\n  /**\n  * Open news\n  *\n  * @since 8.4.0\n  */\n  openNews(options: {\n    showBackButton?: boolean;\n  }): Promise<{\n    openedNews: boolean;\n  }>;\n\n  /**\n  * Open news article\n  *\n  * @since 8.4.0\n  */\n  openNewsArticle(options: {\n    articleId: string;\n    showBackButton?: boolean;\n  }): Promise<{\n    opened: boolean;\n  }>;\n\n  /**\n  * Open help center\n  *\n  * @since 8.4.0\n  */\n  openHelpCenter(options: {\n    showBackButton?: boolean;\n  }): Promise<{\n    opened: boolean;\n  }>;\n\n  /**\n  * Open help center article\n  *\n  * @since 8.4.0\n  */\n  openHelpCenterArticle(options: {\n    articleId: string;\n    showBackButton?: boolean;\n  }): Promise<{\n    opened: boolean;\n  }>;\n\n  /**\n  * Ask the AI a question\n  *\n  * @since 15.0.0\n  */\n  askAI(options: {\n    question: string;\n    showBackButton?: boolean;\n  }): Promise<{\n    opened: boolean;\n  }>;\n\n  /**\n  * Open help center collection\n  *\n  * @since 8.4.0\n  */\n  openHelpCenterCollection(options: {\n    collectionId: string;\n    showBackButton?: boolean;\n  }): Promise<{\n    opened: boolean;\n  }>;\n\n  /**\n  * Search help center\n  *\n  * @since 8.4.0\n  */\n  searchHelpCenter(options: {\n    term: string;\n    showBackButton?: boolean;\n  }): Promise<{\n    opened: boolean;\n  }>;\n\n  /**\n  * Open feature requests\n  *\n  * @since 8.4.0\n  */\n  openFeatureRequests(options: {\n    showBackButton?: boolean;\n  }): Promise<{\n    openedFeatureRequests: boolean;\n  }>;\n\n  /**\n  * Close widget\n  *\n  * @since 7.0.0\n  */\n  close(): Promise<{\n    closedWidget: boolean;\n  }>;\n\n  /**\n  * Check widget status code\n  *\n  * @since 7.0.0\n  */\n  isOpened(): Promise<{\n    isOpened: boolean;\n  }>;\n\n  /**\n * Start feedback flow\n *\n * @since 7.0.0\n */\n  startFeedbackFlow(options: {\n    feedbackFlow?: string;\n    showBackButton?: boolean;\n  }): Promise<{\n    startedFeedbackFlow: boolean;\n  }>;\n\n  /**\n * Start a classic form\n *\n * @since 13.1.0\n */\n  startClassicForm(options: {\n    formId?: string;\n    showBackButton?: boolean;\n  }): Promise<{\n    classicFormStarted: boolean;\n  }>;\n\n  /**\n * Start a new conversation\n *\n * @since 13.1.0\n */\n  startConversation(options: {\n    showBackButton?: boolean;\n  }): Promise<{\n    conversationStarted: boolean;\n  }>;\n\n  /**\n * Opens the conversations tab.\n *\n * @since 13.9.0\n */\n  openConversation(options: {\n    showBackButton?: boolean;\n  }): Promise<{\n    conversationsOpened: boolean;\n  }>;\n\n  /**\n * Start bot\n *\n * @since 10.0.3\n */\n  startBot(options: {\n    botId?: string;\n    showBackButton?: boolean;\n  }): Promise<{\n    startedBot: boolean;\n  }>;\n\n  /**\n * Show or hide the feedback button.\n *\n * @since 8.0.0\n */\n  showFeedbackButton(options: {\n    show?: boolean;\n  }): Promise<{\n    feedbackButtonShown: boolean;\n  }>;\n\n  /**\n* Disable in app notifications.\n*\n* @since 8.6.1\n*/\n  setDisableInAppNotifications(options: {\n    disableInAppNotifications?: boolean;\n  }): Promise<{\n    inAppNotificationsDisabled: boolean;\n  }>;\n\n  /**\n * Set Language\n *\n * @since 7.0.0\n */\n  setLanguage(options: {\n    languageCode: string;\n  }): Promise<{\n    setLanguage: string;\n  }>;\n\n  /**\n * Disable console log overwrite\n *\n * @since 7.0.0\n */\n  disableConsoleLogOverwrite(): Promise<{\n    consoleLogDisabled: boolean;\n  }>;\n\n  /**\n * Enable debug console log\n *\n * @since 7.0.0\n */\n  enableDebugConsoleLog(): Promise<{\n    debugConsoleLogEnabled: boolean;\n  }>;\n\n}"]}